// GOURCE GUI
// © Copyright 2011 Martin Enderleit
//
// This file is part of GourceGUI.
//
// GourceGUI is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// GourceGUI is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with GourceGUI.  If not, see <http://www.gnu.org/licenses/>.


// Shows debug info if set to 1.
#constant GG_DEBUG     0

// Disable quitting with ESCAPE.
disable escapekey

// UDT to hold coordinates.
type coord_type
    x as integer
    y as integer
endtype

// Global EXIT flag.
global GG_Done as boolean
GG_Done = 0

// String containing the parsed options.
global GG_Options as string
GG_Options = ""

// Strings to hold the various paths.
global GG_GourcePath as string
global GG_VCSPath as string
global GG_LogoPath as string
global GG_BGPath as string

// Positioning of PATH area.
global GPPos as coord_type
global VPPos as coord_type
global LPPos as coord_type
global BPPos as coord_type
GPPos.x = 80
GPPos.y = 50
VPPos.x = GPPos.x
VPPos.y = GPPos.y + 50
LPPos.x = GPPos.x
LPPos.y = VPPos.y + 50
BPPos.x = GPPos.x
BPPos.y = LPPos.y + 50

// Positioning of FLAGS area.
global Flags as coord_type
Flags.x = GPPos.x
Flags.y = BPPos.y + 150

// Initialize the Options.
InitOptions()

// Init program.
sync on : sync rate 0
randomize timer()

cls rgb(239,239,239)
sync

// Start the BBB-GUI plugin.
start bbb gui

// Get handle to the main window. (DBPro window)
global MainWin as integer
MainWin = get dbpro window() : set main window MainWin
window set color MainWin, 239, 239, 239

// Create the Labels, EditBoxes, and Buttons for the PATH area.
GPLabel = make label(GPPos.x,GPPos.y,500,20,"Gource Executable",MainWin)
GPEditBox = make editbox(GPPos.x,GPPos.y+20,600,20,ES_READONLY,MainWin) : window set text GPEditBox, GG_GourcePath
GPButton = make button(GPPos.x+600,GPPos.y+19,20,20,"...",MainWin)
VPLabel = make label(VPPos.x,VPPos.y,500,20,"VCS Log Path",MainWin)
VPEditBox = make editbox(VPPos.x,VPPos.y+20,600,20,ES_READONLY,MainWin) : window set text VPEditBox, GG_VCSPath
VPButton = make button(VPPos.x+600,VPPos.y+19,20,20,"...",MainWin)
LPLabel = make label(LPPos.x,LPPos.y,500,20,"Logo Image",MainWin)
LPEditBox = make editbox(LPPos.x,LPPos.y+20,600,20,ES_READONLY,MainWin) : window set text LPEditBox, GG_LogoPath
LPButton = make button(LPPos.x+600,LPPos.y+19,20,20,"...",MainWin)
BPLabel = make label(BPPos.x,BPPos.y,500,20,"Background Image",MainWin)
BPEditBox = make editbox(BPPos.x,BPPos.y+20,600,20,ES_READONLY,MainWin) : window set text BPEditBox, GG_BGPath
BPButton = make button(BPPos.x+600,BPPos.y+19,20,20,"...",MainWin)

bglabel = make label(BPPos.x+20, BPPos.y+75, 100,20, "BG Colour", MainWin)
bgwin = make window(BPPos.x, BPPos.y+75, 16, 16, "BGCOL", MainWin, WS_CHILD)

// Bugged command?
// make hsplitter(LPPos.x, LPPos.y+50, 620, 5, MainWin)

// Create the CheckBoxes, and the Label for the FLAGS area.
FlagLabel = make label(Flags.x, Flags.y-20, 100, 20, "FLAGS", MainWin)
cb_multisampling = make checkbox(Flags.x, Flags.y, 150, 20, "--multi-sampling", MainWin)
cb_fullscreen = make checkbox(Flags.x+250, Flags.y, 150, 20, "--fullscreen", MainWin)
cb_loop = make checkbox(Flags.x+500, Flags.y, 150, 20, "--loop", MainWin)
cb_realtime = make checkbox(Flags.x, Flags.y+20, 150, 20, "--realtime", MainWin)
cb_key = make checkbox(Flags.x+250, Flags.y+20, 150, 20, "--key", MainWin)
cb_vsync = make checkbox(Flags.x+500, Flags.y+20, 150, 20, "--no-vsync", MainWin)

// Create the Gource, and Exit buttons.
GourceButton = make button(650,550,100,30,"Gource!",MainWin)
ExitButton = make button(50,550,100,30,"Exit",MainWin)

if LoadOptions()
    window set text GPEditBox, GG_GourcePath
    window set text VPEditBox, GG_VCSPath
    window set text LPEditBox, GG_LogoPath
    window set text BPEditBox, GG_BGPath
    checkbox set state cb_multisampling, FLAG_MultiSampling
    checkbox set state cb_fullscreen, FLAG_Fullscreen
    checkbox set state cb_loop, FLAG_Loop
    checkbox set state cb_realtime, FLAG_Realtime
    checkbox set state cb_key, FLAG_Key
    checkbox set state cb_vsync, FLAG_NoVSync
    window set color bgwin, rgbr(COLOR_Background), rgbg(COLOR_Background), rgbb(COLOR_Background)
endif

window to front

// Main Loop
repeat
    nice sleep 25
    if window clicked(bgwin)
        c = make color picker(MainWin)
        r = color picker get r(c)
        g = color picker get g(c)
        b = color picker get b(c)
        COLOR_Background = rgb(r,g,b)
        window set color bgwin, rgbr(COLOR_Background), rgbg(COLOR_Background), rgbb(COLOR_Background)
    endif
    if button clicked(GPButton)
        GG_GourcePath = open file dialog("Locate gource.exe","Gource|gource.exe")
        window set text GPEditBox, GG_GourcePath
    endif
    if button clicked(VPButton)
        f$ = open file dialog("Select CVS folder...","All Files (*.*)|*.*")
        if f$ <> ""
            // Temporary fix for not having access to a folder browser!
            // Just select ANY file in the target folder and this
            // code will strip the filename from the path. :)
            done = 0
            i=len(f$)
            repeat
                if mid$(f$,i) = "/" or mid$(f$,i) = "\"
                    GG_VCSPath = left$(f$,i)
                    done = 1
                endif
                dec i, 1
            until (done = 1 or i = 0)
        endif
        window set text VPEditBox, GG_VCSPath
    endif
    if button clicked(LPButton)
        GG_LogoPath = open file dialog("Select logo image...","PNG|*.png")
        window set text LPEditBox, GG_LogoPath
    endif
    if button clicked(BPButton)
        GG_BGPath = open file dialog("Select background image...","Bitmap (*.bmp)|*.bmp|PNG|*.png")
        window set text BPEditBox, GG_BGPath
    endif
    
    // Update FLAGS based on CheckBox info.
    cbs = checkbox get state(cb_multisampling)
    if cbs = 2 then FLAG_MultiSampling = 1
    if cbs = 3 then FLAG_MultiSampling = 0
    cbs = checkbox get state(cb_key)
    if cbs = 2 then FLAG_Key = 1
    if cbs = 3 then FLAG_Key = 0
    cbs = checkbox get state(cb_fullscreen)
    if cbs = 2 then FLAG_Fullscreen = 1
    if cbs = 3 then FLAG_Fullscreen = 0
    cbs = checkbox get state(cb_realtime)
    if cbs = 2 then FLAG_Realtime = 1
    if cbs = 3 then FLAG_Realtime = 0
    cbs = checkbox get state(cb_loop)
    if cbs = 2 then FLAG_Loop = 1
    if cbs = 3 then FLAG_Loop = 0
    cbs = checkbox get state(cb_vsync)
    if cbs = 2 then FLAG_NoVSync = 1
    if cbs = 3 then FLAG_NoVSync = 0
    
    // Handle the Exit and Gource! buttons.    
    if button clicked(ExitButton)
        GG_Quit()
    endif
    if button clicked(GourceButton)
        if GG_GourcePath <> "" and GG_VCSPath <> ""
            SaveOptions()
            ParseOptions()
            hide window MainWin
            execute file GG_GourcePath, GG_Options+GG_VCSPath, "", 1
            show window MainWin
        endif
    endif

    GG_MSGLoop()
    
    cls rgb(239,239,239)
    if GG_DEBUG
        ParseOptions()
        ink rgb(0,0,0)
        col = rgb(r,g,b)
        text 0,0,right$(hex$(col),6)
    endif
    sync
until GG_Done = 1

// End the program...
end bbb gui
end

// Message Loop
// Checks for WM_CLOSE message on the main window...
function GG_MSGLoop()
    repeat
        get event
        h = event get handle()
        m = event get message()
        if h = get main window()
            if m = WM_CLOSE
                GG_Quit()
            endif
        endif
    until m = 0
endfunction

function GG_Quit()
    a = make message box("Really Quit?","GourceGUI",MB_YESNO)
    if a = IDYES
        SaveOptions()
        GG_Done = 1
    endif
endfunction
