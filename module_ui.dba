// GOURCE GUI
// © Copyright 2011 Martin Enderleit
//
// This file is part of GourceGUI.
//
// GourceGUI is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// GourceGUI is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with GourceGUI.  If not, see <http://www.gnu.org/licenses/>.


// Action constants for the buttons.
#constant ACTION_NONE               0
#constant ACTION_SETGOURCEPATH      1
#constant ACTION_SETVCSPATH         2
#constant ACTION_SETLOGOPATH        3
#constant ACTION_GOURCE             4
#constant ACTION_EXIT               5

// State constants for the buttons.
#constant BSTATE_NONE               0
#constant BSTATE_HOVER              1
#constant BSTATE_PUSHED             2

// Button size
#constant BSIZE     16

// UDT to hold button info.
type UI_BUTTON_TYPE
    x1 as integer
    y1 as integer
    x2 as integer
    y2 as integer
    width as integer
    height as integer
    state as integer
    lock as boolean
    action as integer
    label as string
endtype

// Initialize the UI module.
function UI_Init()
    dim UI_Button() as UI_BUTTON_TYPE
    global UI_NumButtons as integer
    UI_NumButtons = 0
endfunction

// Terminate the UI module.
function UI_Terminate()
    UI_DeleteAllButtons()
    undim UI_Button()
endfunction

// Add a new button.
function UI_NewButton(x as integer, y as integer, width as integer, height as integer, label as string, action as integer)
    Index as integer
    array insert at bottom UI_Button()
    Index = UI_NumButtons
    UI_Button().x1 = x
    UI_Button().y1 = y
    UI_Button().x2 = x + width
    UI_Button().y2 = y + height
    UI_Button().width = width
    UI_Button().height = height
    UI_Button().state = 0
    UI_Button().lock = 1
    UI_Button().action = action
    UI_Button().label = label
    inc UI_NumButtons, 1
endfunction Index

// Delete a button.
function UI_DeleteButton(Index as integer)
    if Index >= 0 and Index < UI_NumButtons
        array delete element UI_Button(), Index
        dec UI_NumButtons, 1
    endif
endfunction

// Delete all buttons.
function UI_DeleteAllButtons()
    while UI_NumButtons > 0
        UI_DeleteButton(0)
    endwhile
endfunction

// Move a button.
function UI_MoveButton(Index as integer, x as integer, y as integer)
    if Index >= 0 and Index < UI_NumButtons
        UI_Button(Index).x1 = x
        UI_Button(Index).y1 = y
        UI_Button(Index).x2 = x + UI_Button(Index).width
        UI_Button(Index).y2 = y + UI_Button(Index).height
    endif
endfunction

// Update button states.
function UI_UpdateButtons()
    if UI_NumButtons > 0
        for i=0 to UI_NumButtons-1
            if MSX >= UI_Button(i).x1 and MSX <= UI_Button(i).x2 and MSY >= UI_Button(i).y1 and MSY <= UI_Button(i).y2
                UI_Button(i).state = BSTATE_HOVER
                if MCLK = 1
                    if UI_Button(i).lock = 0
                        UI_PerformAction(UI_Button(i).action)
                    endif
                    UI_Button(i).lock = 1
                    UI_Button(i).state = BSTATE_PUSHED
                else
                    UI_Button(i).lock = 0
                endif
            else
                UI_Button(i).state = BSTATE_NONE
            endif
        next i
    endif
endfunction

// Perform the action specified.
function UI_PerformAction(action as integer)
    if action = ACTION_SETGOURCEPATH
        f$ = FSEL_FileSelector(10,10,"",0,0,1)
        if file exist(f$+"gource.exe") then GG_GourcePath = left$(f$, len(f$)-1)
    endif
    if action = ACTION_SETVCSPATH
        f$ = FSEL_FileSelector(10,10,"",0,0,1)
        GG_VCSPath = left$(f$, len(f$)-1)
    endif
    if action = ACTION_SETLOGOPATH
        GG_LogoPath = FSEL_FileSelector(10,10,".png",0,0,0)
    endif
    if action = ACTION_GOURCE
        if GG_GourcePath <> "" and GG_VCSPath <> ""
            if file exist(GG_GourcePath+"\gource.exe")
                if GG_LogoPath <> ""
                    execute file "gource", "--logo "+GG_LogoPath+" "+GG_VCSPath, GG_GourcePath, 1
                else
                    execute file "gource", GG_VCSPath, GG_GourcePath, 1
                endif
            endif
        endif
    endif
    if action = ACTION_EXIT
        GG_Done = 1
    endif
endfunction

// Draw the buttons.
function UI_DrawButtons()
    if UI_NumButtons > 0
        for i=0 to UI_NumButtons-1
            box outline UI_Button(i).x1, UI_Button(i).y1, UI_Button(i).x2, UI_Button(i).y2, rgb(255,255,255)
            if UI_Button(i).state = BSTATE_HOVER
                box outline UI_Button(i).x1+2, UI_Button(i).y1+2, UI_Button(i).x2-2, UI_Button(i).y2-2, rgb(255,255,0)
            endif
            if UI_Button(i).state = BSTATE_PUSHED
                ink rgb(255,255,0),0
                box UI_Button(i).x1+2, UI_Button(i).y1+2, UI_Button(i).x2-1, UI_Button(i).y2-1
            endif
            if UI_Button(i).label <> ""
                ink rgb(0,0,0),0
                center text UI_Button(i).x1+UI_Button(i).width/2+2, UI_Button(i).y1+1, UI_Button(i).label
                ink rgb(255,255,255),0
                center text UI_Button(i).x1+UI_Button(i).width/2+1, UI_Button(i).y1+0, UI_Button(i).label
            endif
        next i
    endif
endfunction
